{"version":3,"sources":["App.tsx","index.tsx"],"names":["SortType","goodsFromServer","App","useState","isReversed","setIsReversed","NONE","sortType","setSortType","isReset","sortedGoods","goods","visibleGoods","ALPHABET","sort","prevGood","nextGood","localeCompare","LENGTH","length","reverse","getReorderedGoods","className","type","classNames","onClick","isRev","map","good","ReactDOM","render","document","getElementById"],"mappings":"6KAkBKA,E,0EAbQC,EAAkB,CAC7B,YACA,SACA,OACA,YACA,QACA,QACA,OACA,QACA,MACA,W,SAGGD,O,eAAAA,I,uBAAAA,I,oBAAAA,M,KAwCE,IAAME,EAAgB,WAC3B,MAAoCC,oBAAS,GAA7C,mBAAOC,EAAP,KAAmBC,EAAnB,KACA,EAAgCF,mBAASH,EAASM,MAAlD,mBAAOC,EAAP,KAAiBC,EAAjB,KACMC,EAAUL,GAAcG,IAAaP,EAASM,KAE9CI,EAlCD,SACLC,EADK,GAGJ,IADCJ,EACF,EADEA,SAAUH,EACZ,EADYA,WAENQ,EAAY,YAAOD,GAEzB,OAAQJ,GACN,KAAKP,EAASa,SACZD,EAAaE,MAAK,SAACC,EAAUC,GAAX,OAChBD,EAASE,cAAcD,MACzB,MAEF,KAAKhB,EAASkB,OACZN,EAAaE,MAAK,SAACC,EAAUC,GAAX,OAChBD,EAASI,OAASH,EAASG,UAG/B,KAAKnB,EAASM,MAShB,OAJIF,GACFQ,EAAaQ,UAGRR,EAQaS,CAClBpB,EAAiB,CAAEM,WAAUH,eAoB/B,OACE,sBAAKkB,UAAU,kBAAf,UACE,sBAAKA,UAAU,UAAf,UACE,wBACEC,KAAK,SACLD,UAAWE,IACT,iBACA,CAAE,WAAYjB,IAAaP,EAASa,WAEtCY,QA1B4B,WAClCjB,EAAYR,EAASa,WAmBjB,iCAWA,wBACEU,KAAK,SACLD,UAAWE,IACT,oBACA,CAAE,WAAYjB,IAAaP,EAASkB,SAEtCO,QAjCwB,WAC9BjB,EAAYR,EAASkB,SA0BjB,4BAWA,wBACEK,KAAK,SACLD,UAAWE,IACT,oBACA,CAAE,YAAapB,IAEjBqB,QAxCmB,WACzBpB,GAAc,SAAAqB,GAAK,OAAKA,MAiCpB,qBAWCjB,GACC,wBACEc,KAAK,SACLD,UAAU,4BACVG,QA7Ce,WACvBpB,GAAc,GACdG,EAAYR,EAASM,OAwCf,sBAUJ,6BACGI,EAAYiB,KAAK,SAAAC,GAAI,OACpB,oBAEE,UAAQ,OAFV,SAIIA,GAHGA,YCnIjBC,IAASC,OACP,cAAC,EAAD,IACAC,SAASC,eAAe,W","file":"static/js/main.31d20188.chunk.js","sourcesContent":["import React, { useState } from 'react';\nimport classNames from 'classnames';\nimport 'bulma/css/bulma.css';\nimport './App.scss';\n\nexport const goodsFromServer = [\n  'Dumplings',\n  'Carrot',\n  'Eggs',\n  'Ice cream',\n  'Apple',\n  'Bread',\n  'Fish',\n  'Honey',\n  'Jam',\n  'Garlic',\n];\n\nenum SortType {\n  NONE,\n  ALPHABET,\n  LENGTH,\n}\n\ntype ReorderOptions = {\n  sortType: SortType,\n  isReversed: boolean,\n};\n\nexport function getReorderedGoods(\n  goods: string[],\n  { sortType, isReversed }: ReorderOptions,\n) {\n  const visibleGoods = [...goods];\n\n  switch (sortType) {\n    case SortType.ALPHABET:\n      visibleGoods.sort((prevGood, nextGood) => (\n        prevGood.localeCompare(nextGood)));\n      break;\n\n    case SortType.LENGTH:\n      visibleGoods.sort((prevGood, nextGood) => (\n        prevGood.length - nextGood.length));\n      break;\n\n    case SortType.NONE:\n    default:\n      break;\n  }\n\n  if (isReversed) {\n    visibleGoods.reverse();\n  }\n\n  return visibleGoods;\n}\n\nexport const App: React.FC = () => {\n  const [isReversed, setIsReversed] = useState(false);\n  const [sortType, setSortType] = useState(SortType.NONE);\n  const isReset = isReversed || sortType !== SortType.NONE;\n\n  const sortedGoods = getReorderedGoods(\n    goodsFromServer, { sortType, isReversed },\n  );\n\n  const handleClickSortAlpabeticaly = () => {\n    setSortType(SortType.ALPHABET);\n  };\n\n  const handleClickSortByLength = () => {\n    setSortType(SortType.LENGTH);\n  };\n\n  const handleClickReverse = () => {\n    setIsReversed(isRev => !isRev);\n  };\n\n  const handleClickReset = () => {\n    setIsReversed(false);\n    setSortType(SortType.NONE);\n  };\n\n  return (\n    <div className=\"section content\">\n      <div className=\"buttons\">\n        <button\n          type=\"button\"\n          className={classNames(\n            'button is-info',\n            { 'is-light': sortType !== SortType.ALPHABET },\n          )}\n          onClick={handleClickSortAlpabeticaly}\n        >\n          Sort alphabetically\n        </button>\n\n        <button\n          type=\"button\"\n          className={classNames(\n            'button is-success',\n            { 'is-light': sortType !== SortType.LENGTH },\n          )}\n          onClick={handleClickSortByLength}\n        >\n          Sort by length\n        </button>\n\n        <button\n          type=\"button\"\n          className={classNames(\n            'button is-warning',\n            { 'is-light': !isReversed },\n          )}\n          onClick={handleClickReverse}\n        >\n          Reverse\n        </button>\n\n        {isReset && (\n          <button\n            type=\"button\"\n            className=\"button is-danger is-light\"\n            onClick={handleClickReset}\n          >\n            Reset\n          </button>\n        )}\n      </div>\n\n      <ul>\n        {sortedGoods.map((good => (\n          <li\n            key={good}\n            data-cy=\"Good\"\n          >\n            { good }\n          </li>\n        )))}\n      </ul>\n    </div>\n  );\n};\n","import ReactDOM from 'react-dom';\nimport { App } from './App';\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}